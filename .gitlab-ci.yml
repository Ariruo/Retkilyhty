stages:
  - build
  - test
  - deploy

build_and_push_backend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - cd backend
    - echo "POSTGRES_DB=geo_data" >> .env
    - echo "POSTGRES_USER=postgres" >> .env
    - echo "POSTGRES_PASSWORD=Poro6999" >> .env
    - echo "POSTGRES_PORT=5432" >> .env
    - echo "POSTGRES_HOST=postgres" >> .env
    - echo "APPID=29801f93bb782e8265636bf8520b3f31" >> .env
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
  script:
    - docker-compose -f docker-compose-prod.yml build
    - docker tag postgis/postgis:latest ariru/trailtorchbackend:postgis-latest
    - docker push ariru/trailtorchbackend:postgis-latest
    - docker tag ariru/trailtorchbackend:backend-image ariru/trailtorchbackend:backend-latest
    - docker push ariru/trailtorchbackend:backend-latest
  only:
    - main

build_and_push_frontend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - cd frontend
    # Add frontend environment variables if needed
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
  script:
    - docker build -t ariru/trailtorchfrontend:latest -f Dockerfile.frontend .
    - docker push ariru/trailtorchfrontend:latest
  only:
    - main

services:
  postgres:
    image: postgis/postgis:latest
    env_file:   
      - .env    
    volumes:
      - ./geodata.sql:/docker-entrypoint-initdb.d/geodata.sql
    ports:
      - "5432:5432"

  backend:
    build: 
      context: .
      dockerfile: Dockerfile.backend
    depends_on:
      - postgres
    env_file:   
      - .env
    ports:
      - "9000:9000"
    image: ariru/trailtorchbackend:backend-latest
