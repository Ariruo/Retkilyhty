stages:
  - build
  - test
  - deploy
  - connect_to_ec2

build_and_push_backend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - cd backend
    - echo "POSTGRES_DB=$POSTGRES_DB" >> .env
    - echo "POSTGRES_USER=$POSTGRES_USER" >> .env
    - echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> .env
    - echo "POSTGRES_PORT=$POSTGRES_PORT" >> .env
    - echo "POSTGRES_HOST=$POSTGRES_HOST" >> .env
    - echo "APPID=$APPID" >> .env
    - cat .env
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD

  script:
  - docker-compose -f docker-compose-prod.yml build # Build and start services
  - docker tag postgres:latest ariru/trailtorchbackend:postgis-latest  # Tag postgis image
  - docker push ariru/trailtorchbackend:postgis-latest  # Push postgis image to registry
  - docker tag backend:latest ariru/trailtorchbackend:backend-latest  # Tag backend image
  - docker push ariru/trailtorchbackend:backend-latest  # Push backend image to registry
  only:
    - main 


build_and_push_frontend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - cd frontend
    - echo "VITE_MAPBOX_TOKEN=$VITE_MAPBOX_TOKEN" >> .env
    - echo "VITE_BACKEND_URL=$VITE_BACKEND_URL" >> .env 
    - echo "VITE_RECAPTCHA=$VITE_RECAPTCHA" >> .env
    - cat .env  # Output the contents of .env for debugging
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
  script:
    - docker build -t ariru/trailtorchfrontend:latest -f Dockerfile.frontend .
    - docker push ariru/trailtorchfrontend:latest
  only:
    - main

connect_to_ec2:
  stage: connect_to_ec2
  image: ubuntu:latest  # Using Ubuntu image for basic commands
  before_script:
    - apt-get update && apt-get install -y openssh-client  # Install SSH client
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa  # Set SSH private key
    - chmod 600 ~/.ssh/id_rsa  # Set permissions for the SSH key
    - ssh-keyscan -H 34.237.198.148 >> ~/.ssh/known_hosts  # Add EC2 host to known_hosts file
  script:
    - ssh -i "C:\\Users\\d_sha\\trailpair.pem" ec2-user@34.237.198.148 "echo 'Connected to EC2 instance'"
  only:
    - schedules  # Trigger this job only from a schedule or manually


