stages:
  - build
  - test
  - deploy

build_and_push_backend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - cd backend  # Changing directory to the backend folder
    - echo "POSTGRES_DB=$POSTGRES_DB" >> .env
    - echo "POSTGRES_USER=$POSTGRES_USER" >> .env
    - echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> .env
    - echo "POSTGRES_PORT=$POSTGRES_PORT" >> .env
    - echo "POSTGRES_HOST=$POSTGRES_HOST" >> .env
    - echo "APPID=$APPID" >> .env
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
  script:
    - docker-compose -f docker-compose-prod.yml build
    - docker tag postgis/postgis:latest ariru/trailtorchbackend:postgis-latest
    - docker push ariru/trailtorchbackend:postgis-latest
    - docker tag ariru/trailtorchbackend:backend-image ariru/trailtorchbackend:backend-latest
    - docker push ariru/trailtorchbackend:backend-latest
  only:
    - main  # Adjust the branch if needed

build_and_push_frontend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - cd frontend  # Changing directory to the frontend folder
    - echo "YOUR_FRONTEND_ENV_VARIABLE=$YOUR_FRONTEND_ENV_VALUE" >> .env
    - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
  script:
    - docker build -t ariru/trailtorchfrontend:latest -f Dockerfile.frontend .
    - docker push ariru/trailtorchfrontend:latest
  only:
    - main  # Adjust the branch if needed
