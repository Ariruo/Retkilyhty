#sonaruqube backend

sonarqubebackend:
  stage: deploy
  image: ubuntu:latest
    - apt-get update && apt-get install -y openssh-client
  
    - mkdir -p ~/.ssh  # Ensure the ~/.ssh directory exists
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/$KEY.pem  
    - chmod 600 ~/.ssh/$KEY.pem  # Set proper permissions
    - ssh-keyscan -H $BACKEND_IP >> ~/.ssh/known_hosts  # Add EC2 host to known_hosts file
  script:
    - ssh -i ~/.ssh/$KEY.pem ec2-user@$BACKEND_IP 'docker pull sonarqube:lts-community'
    - ssh -i ~/.ssh/$KEY.pem ec2-user@$BACKEND_IP 'docker run -d --name sonarqube -p 9200:9200 sonarqube:lts-community'
  only:
    - main

#sonarqube frontend

sonarqubefrontend:
  stage: deploy
  image: ubuntu:latest
   before_script:
    - apt-get update && apt-get install -y openssh-client
    - mkdir -p ~/.ssh  # Ensure the ~/.ssh directory exists
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/$KEY.pem  
    - chmod 600 ~/.ssh/$KEY.pem  # Set proper permissions
    - ssh-keyscan -H  $FRONTEND_IP >> ~/.ssh/known_hosts  # Add Frontend EC2 host to known_hosts file
    - ssh -i ~/.ssh/$KEY.pem ec2-user@$FRONTEND_IP "sudo docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD"
  script:
    - ssh -i ~/.ssh/$KEY.pem ec2-user@$FRONTEND_IP 'docker pull sonarqube:lts-community'
    - ssh -i ~/.ssh/$KEY.pem ec2-user@$FRONTEND_IP 'docker run -d --name sonarqube -p 9200:9200 sonarqube:lts-community'
  only:
    - main
